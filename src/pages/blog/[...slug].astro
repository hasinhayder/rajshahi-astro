---
import { getCollection } from "astro:content"
import Layout from "../../layouts/Layout.astro"

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog")
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry } = Astro.props
const { Content } = await entry.render()
---

<Layout title={entry.data.title}>
  <!-- <main class="blog-post minimal-container"> -->
  <main>
    <article>
      <h1>{entry.data.title}</h1>
      <p class="post-meta">
        Published on {entry.data.pubDate.toLocaleDateString("en-US", { year: "numeric", month: "long", day: "numeric" })}
        in <a href={`/categories#${entry.data.category.toLowerCase().replace(/\s+/g, "-")}`}>{entry.data.category}</a>
      </p>
      <Content />
      {
        entry.data.tags && entry.data.tags.length > 0 && (
          <div class="post-tags">
            {entry.data.tags.map((tag) => (
              <a href={`/tags/${encodeURIComponent(tag)}`} class="tag">
                #{tag}
              </a>
            ))}
          </div>
        )
      }
    </article>
  </main>
  <!-- </main> -->
</Layout>

<style>
  main {
    max-width: 800px;
    margin: 3rem auto;
    padding: 0 1.5rem;
    flex-grow: 1;
  }

  .post-tags {
    margin-top: 3rem;
    margin-bottom: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  .post-tags .tag {
    display: inline-block;
    background: var(--card-bg);
    color: var(--accent-color);
    border: 1px solid var(--border-color);
    border-radius: 999px;
    padding: 0.18em 0.85em 0.18em 0.85em;
    font-size: 0.92em;
    text-decoration: none;
    transition:
      background 0.2s,
      color 0.2s,
      border-color 0.2s;
    opacity: 0.92;
  }
  .post-tags .tag:hover {
    background: var(--accent-color);
    color: #fff;
    border-color: var(--accent-color);
    opacity: 1;
  }

  .post-meta {
    color: var(--date-color);
    font-size: 0.9em;
    margin-bottom: 2rem;
  }

  a {
    color: var(--accent-color) !important;
    text-decoration: none;
    border-bottom: 1px dotted var(--accent-color);
    transition:
      color var(--transition),
      border-color var(--transition);
  }

  a:hover {
    color: var(--link-hover-color) !important;
    text-decoration: none !important;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll("main a").forEach((anchor) => {
      anchor.setAttribute("target", "_blank")
      anchor.setAttribute("rel", "noopener noreferrer")
    })
  })
</script>
