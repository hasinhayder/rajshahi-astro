---
// import { ClientRouter } from "astro:transitions"
import Header from "../components/Header.astro"
import Footer from "../components/Footer.astro"

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap" rel="stylesheet" />
    <slot name="head" />

    <!-- <ClientRouter /> -->
  </head>
  <body>
    <Header />
    <button id="theme-toggle" aria-label="Toggle dark/light mode" style="position:fixed;top:1rem;right:1rem;z-index:1000;" onclick="toggleTheme()"> ðŸŒ“ </button>
    <slot />
    <Footer />
    <script is:inline>
      // Theme toggle and persistence logic
      function setTheme(theme) {
        if (theme === "dark") {
          document.body.classList.add("dark")
        } else {
          document.body.classList.remove("dark")
        }
        localStorage.setItem("theme", theme)
      }
      function toggleTheme() {
        const isDark = document.body.classList.contains("dark")
        setTheme(isDark ? "light" : "dark")
      }
      function applySavedTheme() {
        const saved = localStorage.getItem("theme")
        const isDark = saved === "dark" || (!saved && window.matchMedia("(prefers-color-scheme: dark)").matches)
        setTheme(isDark ? "dark" : "light")
      }
      applySavedTheme()
      // Uncomment if using ClientRouter for transitions
      // window.addEventListener("astro:after-swap", applySavedTheme);
    </script>
  </body>
</html>

<style>
  :root {
    --text-color: #222;
    --background-color: #fff;
    --accent-color: #8a8a8a;
    --link-hover-color: #333;
    --heading-color: #111;
    --date-color: #555;
    --border-color: #ccc;
  }
  body.dark {
    --text-color: #e0e0e0;
    --background-color: #1a1a1a;
    --accent-color: #8a8a8a;
    --link-hover-color: #b0b0b0;
    --heading-color: #f0f0f0;
    --date-color: #a0a0a0;
    --border-color: #333;
  }
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
    background-color: var(--background-color);
    color: var(--text-color);
    font-family: "Open Sans", system-ui, sans-serif;
    line-height: 1.6;
    display: flex;
    flex-direction: column;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: "Lora", serif;
    color: var(--heading-color);
  }
  #theme-toggle {
    background: var(--background-color);
    color: var(--text-color);
    border: 1px solid var(--border-color);
    border-radius: 50%;
    width: 2.5rem;
    height: 2.5rem;
    font-size: 1.2rem;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    transition:
      background 0.2s,
      color 0.2s;
  }
  #theme-toggle:hover {
    background: var(--accent-color);
    color: var(--background-color);
  }

  @view-transition {
    navigation: auto;
  }
</style>
